server {
    listen 80;
    listen [::]:80;

    server_name catalogcounts.com api.catalogcounts.com site.catalogcounts.com;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS configuration for catalogcounts.com and api.catalogcounts.com
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name catalogcounts.com api.catalogcounts.com;

    # SSL Certificates
    ssl_certificate /etc/letsencrypt/live/catalogcounts.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/catalogcounts.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;  # Use $host to ensure proper forwarding
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
    }
}

# HTTPS configuration for site.catalogcounts.com, proxying to S3
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name site.catalogcounts.com;

    # SSL Certificates
    ssl_certificate /etc/letsencrypt/live/catalogcounts.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/catalogcounts.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location / {
        proxy_pass <s3_url>
        proxy_http_version 1.1;
        proxy_set_header Host <site_host_s3_bucket>; # Ensure correct host header
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Connection "";
    }
}